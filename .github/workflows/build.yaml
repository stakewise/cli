name: Build

on: [ push ]

jobs:
  build:
    runs-on: ${{ matrix.OS }}
    strategy:
      matrix:
        include:
          - OS: linux
            PYTHON_VERSION: 3.8.12
            BUILD_CMD: |
                export PYTHONHASHSEED=42
                export CIRCLE_SHORT_SHA1=$(eval echo $GITHUB_SHA | cut -c -7)
                export BUILD_FILE_NAME=operator-cli-${CIRCLE_SHORT_SHA1}-linux-amd64;
                mkdir ${BUILD_FILE_NAME};
                poetry run pyinstaller --onefile --hidden-import multiaddr.codecs.uint16be --collect-data operator_cli ./operator_cli/main.py --name operator-cli --distpath ./${BUILD_FILE_NAME};
                tar -zcvf ${BUILD_FILE_NAME}.tar.gz ./${BUILD_FILE_NAME};
                mkdir /tmp/artifacts;
                cp ${BUILD_FILE_NAME}.tar.gz /tmp/artifacts;
                sha256sum ${BUILD_FILE_NAME}.tar.gz | head -c 64 > /tmp/artifacts/${BUILD_FILE_NAME}.sha256;

          - OS: macos-11
            PYTHON_VERSION: 3.8.12
            BUILD_CMD: |
              export PYTHONHASHSEED=42
              export CIRCLE_SHORT_SHA1=$(eval echo $GITHUB_SHA | cut -c -7)
              export BUILD_FILE_NAME=operator-cli-${CIRCLE_SHORT_SHA1}-darwin-amd64;
              mkdir ${BUILD_FILE_NAME};
              poetry run pyinstaller --onefile --hidden-import multiaddr.codecs.uint16be --collect-data operator_cli ./operator_cli/main.py --name operator-cli --distpath ./${BUILD_FILE_NAME};
              tar -zcvf ${BUILD_FILE_NAME}.tar.gz ./${BUILD_FILE_NAME};
              mkdir /tmp/artifacts;
              cp ${BUILD_FILE_NAME}.tar.gz /tmp/artifacts;
              shasum -a 256 ${BUILD_FILE_NAME}.tar.gz | head -c 64 > /tmp/artifacts/${BUILD_FILE_NAME}.sha256

          - OS: windows-latest
            PYTHON_VERSION: 3.8.10
            BUILD_CMD: |
              $CIRCLE_SHORT_SHA1 = $env:GITHUB_SHA.substring(0,7)
              $BUILD_FILE_NAME = "operator-cli-" + $CIRCLE_SHORT_SHA1 + "-windows-amd64"
              $BUILD_FILE_NAME_PATH = ".\" + $BUILD_FILE_NAME
              poetry run pyinstaller --onefile --hidden-import multiaddr.codecs.uint16be --collect-data operator_cli ./operator_cli/main.py --name operator-cli --distpath $BUILD_FILE_NAME_PATH
              $ZIP_FILE_NAME = $BUILD_FILE_NAME + ".zip"
              Compress-Archive -Path $BUILD_FILE_NAME_PATH -DestinationPath $ZIP_FILE_NAME
              mkdir \tmp\artifacts
              copy $ZIP_FILE_NAME \tmp\artifacts\
              $CHECKSUM_FILE_NAME_PASH = "\tmp\artifacts\"  + $BUILD_FILE_NAME + ".sha256"
              certUtil -hashfile $ZIP_FILE_NAME SHA256 | findstr /i /v "SHA256" | findstr /i /v "CertUtil" > $CHECKSUM_FILE_NAME_PASH

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Build executable for ${{ matrix.OS }}
        run: ${{ matrix.BUILD_CMD }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: /tmp/articats/*
